package main

import "fmt"

// showUsage displays usage information.
func showUsage() {
	header := "  %s\n  mvp-service is 13 commits behind\n  Last commit by Lois Lane Fri Nov 24 10:56:42 2023 +0100\n"
	message := "  abc123 fix: provide db transaction context\n%s"
	fmt.Println("Usage: rp (reporter) [OPTIONS]")
	fmt.Println()
	fmt.Println("Reporter recursively reports and resolves drifts across multiple git repositories.")
	fmt.Println()
	fmt.Println("Options:")
	fmt.Println("  --help, -h        Show this help message")
	fmt.Println("  --update, -u      Automatically update repositories that are behind")
	fmt.Println("  --branch, -b      Specify the branch to check (default: main)")
	fmt.Println("  --log, -l         Show the complete list of changes using git log")
	fmt.Println("  --force, -f       Forcefully abort rebase and merge conflicts to update")
	fmt.Println("  --remote, -r      Remote name (default: origin)")
	fmt.Println()
	fmt.Println("Examples:")
	fmt.Println()
	fmt.Println("In a Git repository:")
	fmt.Printf("  $ rp\n\n")
	fmt.Println("  Checking Repository For Updates git: (origin/main)")
	fmt.Printf(header, LightRed)
	fmt.Printf(message, Reset)
	fmt.Println()
	fmt.Println("In a directory containing multiple Git repositories:")
	fmt.Printf("  $ rp\n\n")
	fmt.Println("  Checking Repositories For Updates. git: (origin/main)")
	fmt.Println()
	fmt.Println("  Outdated Repositories:")
	fmt.Printf(header, LightRed)
	fmt.Printf(message, Reset)
	fmt.Println()
	fmt.Printf("  Up-to-Date Repositories:\n\n")
	fmt.Printf("  %smvp-frontend is up-to-date%s\n", LightGreen, Reset)
	fmt.Printf("  %smvp-backend-go is up-to-date%s\n", LightGreen, Reset)
	fmt.Printf("  %smvp-backend-python is up-to-date%s\n", LightGreen, Reset)
	fmt.Printf("  %smvp-shared-library is up-to-date%s\n", LightGreen, Reset)
	fmt.Printf("  %smvp-tools is up-to-date%s\n", LightGreen, Reset)
	fmt.Println()
	fmt.Println("Updating a directory containing multiple Git repositories:")
	fmt.Printf("  $ rp -u\n\n")
	fmt.Println("  Checking Repositories For Updates. git: (origin/main)")
	fmt.Println()
	fmt.Println("  Outdated Repositories:")
	fmt.Printf(header, LightRed)
	fmt.Printf(message, Reset)
	fmt.Println("  :.")
	fmt.Println("   Stashing local changes")
	fmt.Println("   Pulling latest changes")
	fmt.Println("   Applying stashed changes")
	fmt.Printf("   %smvp-service is up-to-date%s\n", LightGreen, Reset)
	fmt.Println()
	fmt.Printf("  Up-to-Date Repositories:\n\n")
	fmt.Printf("  %smvp-frontend is up-to-date%s\n", LightGreen, Reset)
	fmt.Printf("  %smvp-backend-go is up-to-date%s\n", LightGreen, Reset)
	fmt.Printf("  %smvp-backend-python is up-to-date%s\n", LightGreen, Reset)
	fmt.Printf("  %smvp-shared-library is up-to-date%s\n", LightGreen, Reset)
	fmt.Printf("  %smvp-tools is up-to-date%s\n", LightGreen, Reset)
}
